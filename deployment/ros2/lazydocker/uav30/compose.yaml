# Don't change the volume names without also changing them in up.sh
volumes:

  # Going to be filled with the contents of the
  #       ./shared_data/
  # folder.
  shared_data:

  # Going to be filled with the workspace built by
  #       ../colcon_workspace_builder/
  # folder.
  colcon_workspace:

services:

  # this container primes the shared volumes and allows the content to be place in them
  init:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    volumes:
      - shared_data:/etc/docker/shared_data:consistent
      - colcon_workspace:/etc/docker/colcon_workspace:consistent

  # zenoh router
  zenoh:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    env_file:
      - ./stack.env
    command: bash -c "export ZENOH_ROUTER_CONFIG_URI=`ros2 pkg prefix mrs_uav_deployment`/share/mrs_uav_deployment/config/zenoh/uav_router.json5; ros2 run rmw_zenoh_cpp rmw_zenohd"

  # starts a custom node from your colcon_workspace
  custom_node:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    volumes:
      - /dev:/dev
      - shared_data:/etc/docker/shared_data
      - colcon_workspace:/etc/docker/colcon_workspace
    privileged: true
    env_file:
      - ./stack.env
    command: >
      bash -c "
        [ -z "$(ls -A /etc/docker/colcon_workspace)" ] && exit 0;
        source /etc/docker/colcon_workspace/install/setup.bash && ros2 launch my_package my_node.launch.py
      "

  # starts the HW API for connecting the MRS UAV System to PX4
  hw_api:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    volumes:
      - /dev:/dev
    privileged: true
    env_file:
      - ./stack.env
    command: bash -c "ros2 launch mrs_uav_px4_api api.launch.py"

  # starts the MRS UAV System's core
  uav_core:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    volumes:
      - shared_data:/etc/docker/shared_data
    env_file:
      - ./stack.env
    command: bash -c "ros2 launch mrs_uav_core core.launch.py platform_config:=`ros2 pkg prefix mrs_uav_deployment`/share/mrs_uav_deployment/config/mrs_uav_system/${UAV_TYPE}.yaml world_config:=`ros2 pkg prefix mrs_uav_deployment`/share/mrs_uav_deployment/config/worlds/world_${WORLD_NAME}.yaml custom_config:=/etc/docker/shared_data/custom_config.yaml network_config:=/etc/docker/shared_data/network_config.yaml"

  # automatic initialization of the system and takeoff
  automatic_start:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    #volumes:
    #  - shared_data:/etc/docker/shared_data
    env_file:
      - ./stack.env
    # custom_config:=/etc/docker/shared_data/automatic_start.yaml
    command: bash -c "ros2 launch mrs_uav_autostart automatic_start.launch.py"

  static_tfs:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    volumes:
      - /dev:/dev
      - shared_data:/etc/docker/shared_data:consistent
    privileged: true
    env_file:
      - ./stack.env
    command: bash -c "/etc/docker/shared_data/static_tfs.sh"

  # `rosbag record`
  # - wayForOffboard will unblock during takeoff
  # - the rosbags are going to be placed in
  #       /home/mrs/docker/${SESSION_NAME}/bag_files
  rosbag:
    image: ctumrs/mrs_uav_system:${MRS_UAV_SYSTEM_VERSION}
    network_mode: host
    environment:
      - SESSION_NAME=${SESSION_NAME}
    volumes:
      - shared_data:/etc/docker/shared_data
      - ${HOME}/docker/${SESSION_NAME}/bag_files:/etc/docker/bag_files:consistent
    env_file:
      - ./stack.env
    command: bash -c "waitForOffboard; /etc/docker/shared_data/record.sh"

  # logging of all the docker containers within this session
  # - the logs are going to be placed in
  #       /home/mrs/docker/${SESSION_NAME}/logs
  dogtail:
    image: klaxalk/dogtail:latest
    environment:
      - SESSION_NAME=${SESSION_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/docker/${SESSION_NAME}/logs:/etc/logs:consistent
      
  bluefox:
    image: ctumrs/bluefox:blfx
    network_mode: host
    privileged: true
    volumes:
      - /dev:/dev
      - shared_data:/etc/docker/shared_data
      - ./vio_params:/opt/ros/jazzy/share/ov_msckf/config
    env_file:
      - ./stack.env
    entrypoint: ["/bin/bash", "-c"]
    command: ["source /opt/ros/jazzy/setup.sh && ros2 launch mrs_open_vins_core vio_real.launch.py custom_config:=/etc/docker/shared_data/custom_config.yaml use_sim_time:=false"]

  vins_republisher:
    image: mrs_uav_system:testo
    network_mode: host
    privileged: true
    volumes:
      - shared_data:/etc/docker/shared_data
    env_file:
      - ./stack.env
    command: bash -c "ros2 launch mrs_vins_republisher vins_republisher.launch.py custom_config:=/etc/docker/shared_data/custom_config_vins_republisher.yaml"